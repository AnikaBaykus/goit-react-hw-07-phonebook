{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Notification/Notification.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/Container/Container.jsx","components/Section/Section.jsx","service/contacts-api.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Notification/Notification.jsx","components/App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","deleteContact","filterChange","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","items","createReducer","contactsActions","_","action","payload","state","filter","contact","id","isLoading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","phoneBookReducer","devTools","process","Container","children","className","s","container","Section","title","section","fetchContactsDefault","a","axios","get","data","fetchAddContacts","name","number","post","uuidv4","fetchDeleteContacts","delete","defaults","baseURL","fetchContacts","dispatch","contactsAPI","addContacts","deleteContacts","getContacts","getFilter","getLoading","loading","getError","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","Filter","inputID","value","useSelector","useDispatch","label","htmlFor","input","type","onChange","e","target","placeholder","ContactForm","useState","setName","setNumber","formNameId","formNumberId","contactsSelectors","form","onSubmit","event","preventDefault","map","alert","contactsOperations","pattern","required","currentTarget","button","ContactList","useEffect","ul","li","p","onClick","Notification","props","message","App","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d7d5d96.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__b_6L8\",\"li\":\"ContactList_li__E6y9s\",\"p\":\"ContactList_p__3JGMY\",\"button\":\"ContactList_button__3LJja\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2J-iM\",\"title\":\"Section_title__1AKme\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__V4VC6\",\"input\":\"Filter_input__1CvDS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__29ARb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1zLKl\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contact/addContact');\nconst deleteContact = createAction('contact/deleteContact');\nconst filterChange = createAction('contact/filterChange');\n\n// pending\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\n\n// fullfilled\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\n\n// rejected\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport {\n  addContact,\n  deleteContact,\n  filterChange,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as contactsActions from './phonebook-actions';\n\nconst items = createReducer([], {\n  [contactsActions.fetchContactsSuccess]: (_, action) => action.payload,\n  [contactsActions.addContact]: (state, action) => [...state, action.payload],\n  [contactsActions.deleteContact]: (state, action) =>\n    state.filter(contact => contact.id !== action.payload),\n});\n\nconst filter = createReducer('', {\n  [contactsActions.filterChange]: (_, action) => action.payload,\n});\n\nconst isLoading = createReducer(false, {\n  [contactsActions.fetchContactsRequest]: () => true,\n  [contactsActions.fetchContactsSuccess]: () => false,\n  [contactsActions.fetchContactsError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [contactsActions.fetchContactsError]: (_, action) => action.payload,\n  [contactsActions.fetchContactsRequest]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  isLoading,\n  error,\n});\n","import phoneBookReducer from './phonebook/phonebook-reducer';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n]; // логирует экшн\n\nconst store = configureStore({\n  reducer: {\n    contacts: phoneBookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development', // Отключить девтулзы для общего пользования\n});\n\nexport { store };\n","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\naxios.defaults.baseURL = 'http://localhost:3000';\n\nexport async function fetchContactsDefault() {\n  const { data } = await axios.get('/contacts');\n  return data;\n}\n\nexport async function fetchAddContacts(name, number) {\n  const { data } = await axios.post('/contacts', {\n    id: uuidv4(),\n    name: name,\n    number: number,\n  });\n\n  return data;\n}\n\nexport async function fetchDeleteContacts(id) {\n  const { data } = await axios.delete(`contacts/${id}`);\n  return data;\n}\n","import * as contactsActions from './phonebook-actions';\nimport * as contactsAPI from 'service/contacts-api';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(contactsActions.fetchContactsRequest());\n\n  try {\n    const contacts = await contactsAPI.fetchContactsDefault();\n    dispatch(contactsActions.fetchContactsSuccess(contacts));\n  } catch (error) {\n    dispatch(contactsActions.fetchContactsError(error));\n  }\n};\n\nexport const addContacts = (name, number) => async dispatch => {\n  const addContact = await contactsAPI.fetchAddContacts(name, number);\n  dispatch(contactsActions.addContact(addContact));\n};\n\nexport const deleteContacts = id => async dispatch => {\n  await contactsAPI.fetchDeleteContacts(id);\n  dispatch(contactsActions.deleteContact(id));\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getLoading = state => state.contacts.loading;\nexport const getError = state => state.contacts.error;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter => filter.toLowerCase();\n    return contacts.filter(contact =>\n      normalizedFilter(contact.name).includes(normalizedFilter(filter)),\n    );\n  },\n);\n","import { v4 as uuidv4 } from 'uuid';\nimport s from './Filter.module.css';\nimport { contactsActions } from 'redux/phonebook';\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport default function Filter() {\n  const inputID = uuidv4();\n  const value = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const onChange = e => dispatch(contactsActions.filterChange(e.target.value));\n\n  return (\n    <div>\n      <label className={s.label} htmlFor={inputID}>\n        Find contacts by name{' '}\n        <input\n          className={s.input}\n          id={inputID}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n          placeholder=\"Enter name...\"\n        />\n      </label>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/phonebook';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const formNameId = uuidv4();\n  const formNumberId = uuidv4();\n\n  const contacts = useSelector(state => contactsSelectors.getContacts(state));\n  const dispatch = useDispatch();\n\n  const handleChangeName = event => {\n    setName(event.currentTarget.value);\n  };\n\n  const handleChangeNumber = event => {\n    setNumber(event.currentTarget.value);\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const findCopyContact = contacts\n      .map(contact => contact.name.toLowerCase())\n      .includes(name.toLowerCase());\n\n    if (findCopyContact) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      dispatch(contactsOperations.addContacts(name, number));\n    }\n    resetForm();\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor={formNameId}>\n        Name{' '}\n        <input\n          className={s.input}\n          id={formNameId}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChangeName}\n          placeholder={'Add name...'}\n        />\n      </label>\n\n      <label className={s.label} htmlFor={formNumberId}>\n        Number{' '}\n        <input\n          className={s.input}\n          id={formNumberId}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChangeNumber}\n          placeholder={'Add phone number...'}\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { contactsOperations, contactsSelectors } from 'redux/phonebook';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={s.ul}>\n      {contacts?.map(({ id, name, number }) => (\n        <li className={s.li} key={id}>\n          <p className={s.p}>\n            {name}: {number}\n          </p>\n          <button\n            className={s.button}\n            onClick={() => dispatch(contactsOperations.deleteContacts(id))}\n            type=\"button\"\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nfunction Notification(props) {\n  const { message } = props;\n\n  return <h3 className={s.message}>{message}</h3>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import './App.css';\nimport Container from './Container';\nimport Section from './Section';\nimport Filter from './Filter';\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport Notification from './Notification';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/phonebook';\nimport { useEffect } from 'react';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => contactsSelectors.getContacts(state));\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        {contacts.length > 0 ? (\n          <>\n            <Filter />\n            <ContactList />\n          </>\n        ) : (\n          <Notification message=\"No contacts\"></Notification>\n        )}\n      </Section>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2cjIp\",\"label\":\"ContactForm_label__1WLUy\",\"input\":\"ContactForm_input__1ixZ2\",\"button\":\"ContactForm_button__1PCEr\"};"],"sourceRoot":""}