{"version":3,"sources":["components/Section/Section.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Notification/Notification.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/Container/Container.jsx","components/Section/Section.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Notification/Notification.jsx","components/App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterChange","items","createReducer","state","action","filter","contact","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","phoneBookReducer","devTools","process","persistor","persistStore","Container","children","className","s","container","Section","title","section","Filter","inputID","value","useSelector","dispatch","useDispatch","label","htmlFor","input","type","onChange","e","target","placeholder","ContactForm","useState","setName","setNumber","formNameId","formNumberId","form","onSubmit","event","preventDefault","map","toLowerCase","includes","alert","pattern","required","currentTarget","button","ContactList","allContacts","normalizedFilter","getVisibleContacts","ul","li","p","onClick","Notification","props","message","App","length","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,mBCA7DD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,mBCAxDD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,QAAU,gC,oKCsBtBC,EAAaC,YAAa,eAAe,SAACC,EAAMC,GAAP,MAAmB,CAChEC,QAAS,CACPF,KAAMA,EACNC,OAAQA,EACRE,GAAIC,mBAGFC,EAAgBN,YAAa,kBAC7BO,EAAeP,YAAa,wBCE5BQ,EAAQC,YAAc,IAAD,mBACxBV,GAAa,SAACW,EAAOC,GAAR,4BAAuBD,GAAvB,CAA8BC,EAAOR,aAD1B,cAExBG,GAAgB,SAACI,EAAOC,GAAR,OACfD,EAAME,QAAO,SAAAC,GAAO,OAAIA,EAAQT,KAAOO,EAAOR,cAHvB,IAKrBS,EAASH,YAAc,GAAD,eACzBF,GAAe,SAACO,EAAGH,GAAJ,OAAeA,EAAOR,YAGzBY,cAAgB,CAC7BP,QACAI,W,yCCfII,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGIC,EAAuB,CAC3BC,IAAK,aACLC,YACAC,UAAW,CAAC,WAGRC,EAAQC,YAAe,CAC3BC,QAAS,CACPC,SAAUC,YAAeR,EAAsBS,IAEjDpB,aACAqB,UAAUC,IAGNC,EAAYC,YAAaT,G,wCCzChBU,MARf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,iBCaxBI,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOL,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAWC,IAAEI,QAAtB,UACE,oBAAIL,UAAWC,IAAEG,MAAjB,SAAyBA,IACxBL,M,iBCCQ,SAASO,IACtB,IAAMC,EAAU7C,cACV8C,EAAQC,aAAY,SAAA1C,GAAK,OAAIA,EAAMwB,SAAStB,UAC5CyC,EAAWC,cAIjB,OACE,8BACE,wBAAOX,UAAWC,IAAEW,MAAOC,QAASN,EAApC,kCACwB,IACtB,uBACEP,UAAWC,IAAEa,MACbrD,GAAI8C,EACJQ,KAAK,OACLP,MAAOA,EACPQ,SAXS,SAAAC,GAAC,OAAIP,EAAS9C,EAAaqD,EAAEC,OAAOV,SAY7CW,YAAY,uB,4BCjBP,SAASC,IACtB,MAAwBC,mBAAS,IAAjC,mBAAO/D,EAAP,KAAagE,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAO9D,EAAP,KAAegE,EAAf,KAEMC,EAAa9D,cACb+D,EAAe/D,cAEf6B,EAAWkB,aAAY,SAAA1C,GAAK,OAAIA,EAAMwB,SAAS1B,SAC/C6C,EAAWC,cA+BjB,OACE,uBAAMX,UAAWC,IAAEyB,KAAMC,SAjBN,SAAAC,GACnBA,EAAMC,iBAEkBtC,EACrBuC,KAAI,SAAA5D,GAAO,OAAIA,EAAQZ,KAAKyE,iBAC5BC,SAAS1E,EAAKyE,eAGfE,MAAM,GAAD,OAAI3E,EAAJ,6BAELoD,EAAStD,EAAWE,EAAMC,IAd5B+D,EAAQ,IACRC,EAAU,KAoBV,UACE,wBAAOvB,UAAWC,IAAEW,MAAOC,QAASW,EAApC,iBACO,IACL,uBACExB,UAAWC,IAAEa,MACbrD,GAAI+D,EACJT,KAAK,OACLzD,KAAK,OACL4E,QAAQ,yHACR9B,MAAM,kcACN+B,UAAQ,EACR3B,MAAOlD,EACP0D,SA1CiB,SAAAY,GACvBN,EAAQM,EAAMQ,cAAc5B,QA0CtBW,YAAa,mBAIjB,wBAAOnB,UAAWC,IAAEW,MAAOC,QAASY,EAApC,mBACS,IACP,uBACEzB,UAAWC,IAAEa,MACbrD,GAAIgE,EACJV,KAAK,MACLzD,KAAK,SACL4E,QAAQ,yFACR9B,MAAM,giBACN+B,UAAQ,EACR3B,MAAOjD,EACPyD,SAtDmB,SAAAY,GACzBL,EAAUK,EAAMQ,cAAc5B,QAsDxBW,YAAa,2BAIjB,wBAAQnB,UAAWC,IAAEoC,OAAQtB,KAAK,SAAlC,4B,oBCnES,SAASuB,IACtB,IAAM/C,EAAWkB,aAAY,SAAA1C,GAAK,OATT,SAACwE,EAAatE,GACvC,IAAMuE,EAAmBvE,EAAO8D,cAEhC,OAAOQ,EAAYtE,QAAO,SAAAC,GAAO,OAC/BA,EAAQZ,KAAKyE,cAAcC,SAASQ,MAMpCC,CAAmB1E,EAAMwB,SAAS1B,MAAOE,EAAMwB,SAAStB,WAEpDyC,EAAWC,cAEjB,OACE,oBAAIX,UAAWC,IAAEyC,GAAjB,gBACGnD,QADH,IACGA,OADH,EACGA,EAAUuC,KAAI,gBAAGrE,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACb,qBAAIyC,UAAWC,IAAE0C,GAAjB,UACE,oBAAG3C,UAAWC,IAAE2C,EAAhB,UACGtF,EADH,KACWC,KACN,IACL,wBACEyC,UAAWC,IAAEoC,OACbQ,QAAS,kBAAMnC,EAAS/C,EAAcF,KACtCsD,KAAK,SAHP,sBAJwBtD,Q,qBCVnBqF,MAVf,SAAsBC,GACpB,IAAQC,EAAYD,EAAZC,QAER,OAAO,oBAAIhD,UAAWC,IAAE+C,QAAjB,SAA2BA,KCIrB,SAASC,IACtB,IAAM1D,EAAWkB,aAAY,SAAA1C,GAAK,OAAIA,EAAMwB,SAAS1B,SACrD,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASuC,MAAM,YAAf,SACE,cAACgB,EAAD,MAEF,cAAC,EAAD,CAAShB,MAAM,WAAf,SACGb,EAAS2D,OAAS,EACjB,qCACE,cAAC5C,EAAD,IACA,cAACgC,EAAD,OAGF,cAAC,EAAD,CAAcU,QAAQ,qB,MCfhCG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUjE,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAakE,QAAS,KAAM1D,UAAWA,EAAvC,SACE,cAAC,EAAD,UAIN2D,SAASC,eAAe,U,kBChB1BtG,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,kBCAlID,EAAOC,QAAU,CAAC,GAAK,wBAAwB,GAAK,wBAAwB,EAAI,uBAAuB,OAAS,+B","file":"static/js/main.bfd38eaf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2J-iM\",\"title\":\"Section_title__1AKme\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__V4VC6\",\"input\":\"Filter_input__1CvDS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__29ARb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1zLKl\"};","import { v4 as uuidv4 } from 'uuid';\n// import * as types from './phonebook-types';\nimport { createAction } from '@reduxjs/toolkit';\n\n// export const addContact = (name, number) => ({\n//   type: types.ADD,\n//   payload: {\n//     name: name,\n//     number: number,\n//     id: uuidv4(),\n//   },\n// });\n\n// export const deleteContact = contactId => ({\n//   type: types.DELETE,\n//   payload: contactId,\n// });\n\n// export const filterChange = value => ({\n//   type: types.FILTER_CHANGE,\n//   payload: value,\n// });\n\nconst addContact = createAction('contact/Add', (name, number) => ({\n  payload: {\n    name: name,\n    number: number,\n    id: uuidv4(),\n  },\n}));\nconst deleteContact = createAction('contact/Delete');\nconst filterChange = createAction('contact/FilterChange');\n\nexport { addContact, deleteContact, filterChange };\n","import { combineReducers } from 'redux';\n// import { ADD, DELETE, FILTER_CHANGE } from './phonebook-types';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, filterChange } from './phonebook-actions';\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case ADD:\n//       return [...state, payload];\n\n//     case DELETE:\n//       return state.filter(contact => contact.id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case FILTER_CHANGE:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export default combineReducers({\n//   items,\n//   filter,\n// });\n\nconst items = createReducer([], {\n  [addContact]: (state, action) => [...state, action.payload],\n  [deleteContact]: (state, action) =>\n    state.filter(contact => contact.id !== action.payload),\n});\nconst filter = createReducer('', {\n  [filterChange]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","// import { composeWithDevTools } from 'redux-devtools-extension';\n// import { createStore, combineReducers } from 'redux';\n// import { combineReducers } from 'redux';\n\n// const rootReducer = combineReducers({\n//   contacts: phoneBookReducer,\n// });\n// export const store = createStore(rootReducer, composeWithDevTools());\n\nimport phoneBookReducer from './phonebook/phonebook-reducer';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\n// const persistConfig = {\n//   key: 'subscribers',\n//   storage,\n// };\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n]; // логирует экшн\n\nconst contactPersistConfig = {\n  key: 'subscriber',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactPersistConfig, phoneBookReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development', // Отключить девтулзы для общего пользования\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","// import PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './Filter.module.css';\n// import { connect } from 'react-redux';\nimport { filterChange } from '../../redux/phonebook/phonebook-actions.js';\nimport { useSelector, useDispatch } from 'react-redux';\n\n// function Filter({ value, onChange })\nexport default function Filter() {\n  const inputID = uuidv4();\n  const value = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const onChange = e => dispatch(filterChange(e.target.value));\n\n  return (\n    <div>\n      <label className={s.label} htmlFor={inputID}>\n        Find contacts by name{' '}\n        <input\n          className={s.input}\n          id={inputID}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n          placeholder=\"Enter name...\"\n        />\n      </label>\n    </div>\n  );\n}\n// const mapStateToProps = state => ({\n//   value: state.contacts.filter,\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onChange: event => dispatch(filterChange(event.target.value)),\n// });\n\n// Filter.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/phonebook/phonebook-actions.js';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const formNameId = uuidv4();\n  const formNumberId = uuidv4();\n\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  const handleChangeName = event => {\n    setName(event.currentTarget.value);\n  };\n\n  const handleChangeNumber = event => {\n    setNumber(event.currentTarget.value);\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const findCopyContact = contacts\n      .map(contact => contact.name.toLowerCase())\n      .includes(name.toLowerCase());\n\n    if (findCopyContact) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      dispatch(addContact(name, number));\n    }\n    // options.onSubmit(name, number);\n    resetForm();\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor={formNameId}>\n        Name{' '}\n        <input\n          className={s.input}\n          id={formNameId}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChangeName}\n          placeholder={'Add name...'}\n        />\n      </label>\n\n      <label className={s.label} htmlFor={formNumberId}>\n        Number{' '}\n        <input\n          className={s.input}\n          id={formNumberId}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChangeNumber}\n          placeholder={'Add phone number...'}\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n// ContactForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n\n// const mapDispatchToProps = dispatch => ({\n//   onSubmit: (name, number) => dispatch(addContact(name, number)),\n// });\n\n// export default connect(null, mapDispatchToProps)(ContactForm);\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n// import { connect } from 'react-redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/phonebook/phonebook-actions.js';\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nexport default function ContactList() {\n  const contacts = useSelector(state =>\n    getVisibleContacts(state.contacts.items, state.contacts.filter),\n  );\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={s.ul}>\n      {contacts?.map(({ id, name, number }) => (\n        <li className={s.li} key={id}>\n          <p className={s.p}>\n            {name}: {number}\n          </p>{' '}\n          <button\n            className={s.button}\n            onClick={() => dispatch(deleteContact(id))}\n            type=\"button\"\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  // onDeleteContact: PropTypes.func.isRequired,\n};\n\n// const mapStateToProps = state => {\n//   const { filter, items } = state.contacts;\n//   const visibleContact = getVisibleContacts(items, filter);\n\n//   return {\n//     contacts: visibleContact,\n//   };\n// };\n\n// const mapDispatchToProps = dispatch => ({\n//   onDeleteContact: id => dispatch(deleteContact(id)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nfunction Notification(props) {\n  const { message } = props;\n\n  return <h3 className={s.message}>{message}</h3>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import './App.css';\nimport Container from './Container';\nimport Section from './Section';\nimport Filter from './Filter';\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport Notification from './Notification';\nimport { useSelector } from 'react-redux';\n//\n\nexport default function App() {\n  const contacts = useSelector(state => state.contacts.items);\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        {contacts.length > 0 ? (\n          <>\n            <Filter />\n            <ContactList />\n          </>\n        ) : (\n          <Notification message=\"No contacts\"></Notification>\n        )}\n      </Section>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n//\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2cjIp\",\"label\":\"ContactForm_label__1WLUy\",\"input\":\"ContactForm_input__1ixZ2\",\"button\":\"ContactForm_button__1PCEr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__b_6L8\",\"li\":\"ContactList_li__E6y9s\",\"p\":\"ContactList_p__3JGMY\",\"button\":\"ContactList_button__3LJja\"};"],"sourceRoot":""}